"use strict";
/*
 * --------------------------------------------------------------------------------
 * <copyright company="Aspose" file="pageSetup.ts">
 *   Copyright (c) 2024 Aspose.Words for Cloud
 * </copyright>
 * <summary>
 *   Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 * </summary>
 * --------------------------------------------------------------------------------
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PageSetup = exports.importsMapPageSetup = void 0;
const linkElement_1 = require("./linkElement");
exports.importsMapPageSetup = {
    LinkElement: linkElement_1.LinkElement,
};
/**
 * Represents the page setup properties of a section.
 * PageSetup object contains all the page setup attributes of a section (left margin, bottom margin, paper size, and so on) as properties.
 */
class PageSetup extends linkElement_1.LinkElement {
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(PageSetup.attributeTypeMap);
    }
    constructor(init) {
        super(init);
        Object.assign(this, init);
    }
    collectFilesContent(_resultFilesContent) {
    }
    validate() {
        super.validate();
    }
}
exports.PageSetup = PageSetup;
/**
 * Attribute type map
 */
PageSetup.attributeTypeMap = [
    {
        name: "bidi",
        baseName: "Bidi",
        type: "boolean",
    },
    {
        name: "borderAlwaysInFront",
        baseName: "BorderAlwaysInFront",
        type: "boolean",
    },
    {
        name: "borderAppliesTo",
        baseName: "BorderAppliesTo",
        type: "PageSetup.BorderAppliesToEnum",
    },
    {
        name: "borderDistanceFrom",
        baseName: "BorderDistanceFrom",
        type: "PageSetup.BorderDistanceFromEnum",
    },
    {
        name: "bottomMargin",
        baseName: "BottomMargin",
        type: "number",
    },
    {
        name: "differentFirstPageHeaderFooter",
        baseName: "DifferentFirstPageHeaderFooter",
        type: "boolean",
    },
    {
        name: "firstPageTray",
        baseName: "FirstPageTray",
        type: "number",
    },
    {
        name: "footerDistance",
        baseName: "FooterDistance",
        type: "number",
    },
    {
        name: "gutter",
        baseName: "Gutter",
        type: "number",
    },
    {
        name: "headerDistance",
        baseName: "HeaderDistance",
        type: "number",
    },
    {
        name: "leftMargin",
        baseName: "LeftMargin",
        type: "number",
    },
    {
        name: "lineNumberCountBy",
        baseName: "LineNumberCountBy",
        type: "number",
    },
    {
        name: "lineNumberDistanceFromText",
        baseName: "LineNumberDistanceFromText",
        type: "number",
    },
    {
        name: "lineNumberRestartMode",
        baseName: "LineNumberRestartMode",
        type: "PageSetup.LineNumberRestartModeEnum",
    },
    {
        name: "lineStartingNumber",
        baseName: "LineStartingNumber",
        type: "number",
    },
    {
        name: "orientation",
        baseName: "Orientation",
        type: "PageSetup.OrientationEnum",
    },
    {
        name: "otherPagesTray",
        baseName: "OtherPagesTray",
        type: "number",
    },
    {
        name: "pageHeight",
        baseName: "PageHeight",
        type: "number",
    },
    {
        name: "pageNumberStyle",
        baseName: "PageNumberStyle",
        type: "PageSetup.PageNumberStyleEnum",
    },
    {
        name: "pageStartingNumber",
        baseName: "PageStartingNumber",
        type: "number",
    },
    {
        name: "pageWidth",
        baseName: "PageWidth",
        type: "number",
    },
    {
        name: "paperSize",
        baseName: "PaperSize",
        type: "PageSetup.PaperSizeEnum",
    },
    {
        name: "restartPageNumbering",
        baseName: "RestartPageNumbering",
        type: "boolean",
    },
    {
        name: "rightMargin",
        baseName: "RightMargin",
        type: "number",
    },
    {
        name: "rtlGutter",
        baseName: "RtlGutter",
        type: "boolean",
    },
    {
        name: "sectionStart",
        baseName: "SectionStart",
        type: "PageSetup.SectionStartEnum",
    },
    {
        name: "suppressEndnotes",
        baseName: "SuppressEndnotes",
        type: "boolean",
    },
    {
        name: "topMargin",
        baseName: "TopMargin",
        type: "number",
    },
    {
        name: "verticalAlignment",
        baseName: "VerticalAlignment",
        type: "PageSetup.VerticalAlignmentEnum",
    }
];
/**
 * Enums for PageSetup
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (PageSetup) {
    let BorderAppliesToEnum;
    (function (BorderAppliesToEnum) {
        BorderAppliesToEnum[BorderAppliesToEnum["AllPages"] = 'AllPages'] = "AllPages";
        BorderAppliesToEnum[BorderAppliesToEnum["FirstPage"] = 'FirstPage'] = "FirstPage";
        BorderAppliesToEnum[BorderAppliesToEnum["OtherPages"] = 'OtherPages'] = "OtherPages";
    })(BorderAppliesToEnum = PageSetup.BorderAppliesToEnum || (PageSetup.BorderAppliesToEnum = {}));
    let BorderDistanceFromEnum;
    (function (BorderDistanceFromEnum) {
        BorderDistanceFromEnum[BorderDistanceFromEnum["Text"] = 'Text'] = "Text";
        BorderDistanceFromEnum[BorderDistanceFromEnum["PageEdge"] = 'PageEdge'] = "PageEdge";
    })(BorderDistanceFromEnum = PageSetup.BorderDistanceFromEnum || (PageSetup.BorderDistanceFromEnum = {}));
    let LineNumberRestartModeEnum;
    (function (LineNumberRestartModeEnum) {
        LineNumberRestartModeEnum[LineNumberRestartModeEnum["RestartPage"] = 'RestartPage'] = "RestartPage";
        LineNumberRestartModeEnum[LineNumberRestartModeEnum["RestartSection"] = 'RestartSection'] = "RestartSection";
        LineNumberRestartModeEnum[LineNumberRestartModeEnum["Continuous"] = 'Continuous'] = "Continuous";
    })(LineNumberRestartModeEnum = PageSetup.LineNumberRestartModeEnum || (PageSetup.LineNumberRestartModeEnum = {}));
    let OrientationEnum;
    (function (OrientationEnum) {
        OrientationEnum[OrientationEnum["Portrait"] = 'Portrait'] = "Portrait";
        OrientationEnum[OrientationEnum["Landscape"] = 'Landscape'] = "Landscape";
    })(OrientationEnum = PageSetup.OrientationEnum || (PageSetup.OrientationEnum = {}));
    let PageNumberStyleEnum;
    (function (PageNumberStyleEnum) {
        PageNumberStyleEnum[PageNumberStyleEnum["Arabic"] = 'Arabic'] = "Arabic";
        PageNumberStyleEnum[PageNumberStyleEnum["UppercaseRoman"] = 'UppercaseRoman'] = "UppercaseRoman";
        PageNumberStyleEnum[PageNumberStyleEnum["LowercaseRoman"] = 'LowercaseRoman'] = "LowercaseRoman";
        PageNumberStyleEnum[PageNumberStyleEnum["UppercaseLetter"] = 'UppercaseLetter'] = "UppercaseLetter";
        PageNumberStyleEnum[PageNumberStyleEnum["LowercaseLetter"] = 'LowercaseLetter'] = "LowercaseLetter";
        PageNumberStyleEnum[PageNumberStyleEnum["Ordinal"] = 'Ordinal'] = "Ordinal";
        PageNumberStyleEnum[PageNumberStyleEnum["Number"] = 'Number'] = "Number";
        PageNumberStyleEnum[PageNumberStyleEnum["OrdinalText"] = 'OrdinalText'] = "OrdinalText";
        PageNumberStyleEnum[PageNumberStyleEnum["Hex"] = 'Hex'] = "Hex";
        PageNumberStyleEnum[PageNumberStyleEnum["ChicagoManual"] = 'ChicagoManual'] = "ChicagoManual";
        PageNumberStyleEnum[PageNumberStyleEnum["Kanji"] = 'Kanji'] = "Kanji";
        PageNumberStyleEnum[PageNumberStyleEnum["KanjiDigit"] = 'KanjiDigit'] = "KanjiDigit";
        PageNumberStyleEnum[PageNumberStyleEnum["AiueoHalfWidth"] = 'AiueoHalfWidth'] = "AiueoHalfWidth";
        PageNumberStyleEnum[PageNumberStyleEnum["IrohaHalfWidth"] = 'IrohaHalfWidth'] = "IrohaHalfWidth";
        PageNumberStyleEnum[PageNumberStyleEnum["ArabicFullWidth"] = 'ArabicFullWidth'] = "ArabicFullWidth";
        PageNumberStyleEnum[PageNumberStyleEnum["ArabicHalfWidth"] = 'ArabicHalfWidth'] = "ArabicHalfWidth";
        PageNumberStyleEnum[PageNumberStyleEnum["KanjiTraditional"] = 'KanjiTraditional'] = "KanjiTraditional";
        PageNumberStyleEnum[PageNumberStyleEnum["KanjiTraditional2"] = 'KanjiTraditional2'] = "KanjiTraditional2";
        PageNumberStyleEnum[PageNumberStyleEnum["NumberInCircle"] = 'NumberInCircle'] = "NumberInCircle";
        PageNumberStyleEnum[PageNumberStyleEnum["DecimalFullWidth"] = 'DecimalFullWidth'] = "DecimalFullWidth";
        PageNumberStyleEnum[PageNumberStyleEnum["Aiueo"] = 'Aiueo'] = "Aiueo";
        PageNumberStyleEnum[PageNumberStyleEnum["Iroha"] = 'Iroha'] = "Iroha";
        PageNumberStyleEnum[PageNumberStyleEnum["LeadingZero"] = 'LeadingZero'] = "LeadingZero";
        PageNumberStyleEnum[PageNumberStyleEnum["Bullet"] = 'Bullet'] = "Bullet";
        PageNumberStyleEnum[PageNumberStyleEnum["Ganada"] = 'Ganada'] = "Ganada";
        PageNumberStyleEnum[PageNumberStyleEnum["Chosung"] = 'Chosung'] = "Chosung";
        PageNumberStyleEnum[PageNumberStyleEnum["GB1"] = 'GB1'] = "GB1";
        PageNumberStyleEnum[PageNumberStyleEnum["GB2"] = 'GB2'] = "GB2";
        PageNumberStyleEnum[PageNumberStyleEnum["GB3"] = 'GB3'] = "GB3";
        PageNumberStyleEnum[PageNumberStyleEnum["GB4"] = 'GB4'] = "GB4";
        PageNumberStyleEnum[PageNumberStyleEnum["Zodiac1"] = 'Zodiac1'] = "Zodiac1";
        PageNumberStyleEnum[PageNumberStyleEnum["Zodiac2"] = 'Zodiac2'] = "Zodiac2";
        PageNumberStyleEnum[PageNumberStyleEnum["Zodiac3"] = 'Zodiac3'] = "Zodiac3";
        PageNumberStyleEnum[PageNumberStyleEnum["TradChinNum1"] = 'TradChinNum1'] = "TradChinNum1";
        PageNumberStyleEnum[PageNumberStyleEnum["TradChinNum2"] = 'TradChinNum2'] = "TradChinNum2";
        PageNumberStyleEnum[PageNumberStyleEnum["TradChinNum3"] = 'TradChinNum3'] = "TradChinNum3";
        PageNumberStyleEnum[PageNumberStyleEnum["TradChinNum4"] = 'TradChinNum4'] = "TradChinNum4";
        PageNumberStyleEnum[PageNumberStyleEnum["SimpChinNum1"] = 'SimpChinNum1'] = "SimpChinNum1";
        PageNumberStyleEnum[PageNumberStyleEnum["SimpChinNum2"] = 'SimpChinNum2'] = "SimpChinNum2";
        PageNumberStyleEnum[PageNumberStyleEnum["SimpChinNum3"] = 'SimpChinNum3'] = "SimpChinNum3";
        PageNumberStyleEnum[PageNumberStyleEnum["SimpChinNum4"] = 'SimpChinNum4'] = "SimpChinNum4";
        PageNumberStyleEnum[PageNumberStyleEnum["HanjaRead"] = 'HanjaRead'] = "HanjaRead";
        PageNumberStyleEnum[PageNumberStyleEnum["HanjaReadDigit"] = 'HanjaReadDigit'] = "HanjaReadDigit";
        PageNumberStyleEnum[PageNumberStyleEnum["Hangul"] = 'Hangul'] = "Hangul";
        PageNumberStyleEnum[PageNumberStyleEnum["Hanja"] = 'Hanja'] = "Hanja";
        PageNumberStyleEnum[PageNumberStyleEnum["Hebrew1"] = 'Hebrew1'] = "Hebrew1";
        PageNumberStyleEnum[PageNumberStyleEnum["Arabic1"] = 'Arabic1'] = "Arabic1";
        PageNumberStyleEnum[PageNumberStyleEnum["Hebrew2"] = 'Hebrew2'] = "Hebrew2";
        PageNumberStyleEnum[PageNumberStyleEnum["Arabic2"] = 'Arabic2'] = "Arabic2";
        PageNumberStyleEnum[PageNumberStyleEnum["HindiLetter1"] = 'HindiLetter1'] = "HindiLetter1";
        PageNumberStyleEnum[PageNumberStyleEnum["HindiLetter2"] = 'HindiLetter2'] = "HindiLetter2";
        PageNumberStyleEnum[PageNumberStyleEnum["HindiArabic"] = 'HindiArabic'] = "HindiArabic";
        PageNumberStyleEnum[PageNumberStyleEnum["HindiCardinalText"] = 'HindiCardinalText'] = "HindiCardinalText";
        PageNumberStyleEnum[PageNumberStyleEnum["ThaiLetter"] = 'ThaiLetter'] = "ThaiLetter";
        PageNumberStyleEnum[PageNumberStyleEnum["ThaiArabic"] = 'ThaiArabic'] = "ThaiArabic";
        PageNumberStyleEnum[PageNumberStyleEnum["ThaiCardinalText"] = 'ThaiCardinalText'] = "ThaiCardinalText";
        PageNumberStyleEnum[PageNumberStyleEnum["VietCardinalText"] = 'VietCardinalText'] = "VietCardinalText";
        PageNumberStyleEnum[PageNumberStyleEnum["NumberInDash"] = 'NumberInDash'] = "NumberInDash";
        PageNumberStyleEnum[PageNumberStyleEnum["LowercaseRussian"] = 'LowercaseRussian'] = "LowercaseRussian";
        PageNumberStyleEnum[PageNumberStyleEnum["UppercaseRussian"] = 'UppercaseRussian'] = "UppercaseRussian";
        PageNumberStyleEnum[PageNumberStyleEnum["None"] = 'None'] = "None";
        PageNumberStyleEnum[PageNumberStyleEnum["Custom"] = 'Custom'] = "Custom";
    })(PageNumberStyleEnum = PageSetup.PageNumberStyleEnum || (PageSetup.PageNumberStyleEnum = {}));
    let PaperSizeEnum;
    (function (PaperSizeEnum) {
        PaperSizeEnum[PaperSizeEnum["A3"] = 'A3'] = "A3";
        PaperSizeEnum[PaperSizeEnum["A4"] = 'A4'] = "A4";
        PaperSizeEnum[PaperSizeEnum["A5"] = 'A5'] = "A5";
        PaperSizeEnum[PaperSizeEnum["B4"] = 'B4'] = "B4";
        PaperSizeEnum[PaperSizeEnum["B5"] = 'B5'] = "B5";
        PaperSizeEnum[PaperSizeEnum["Executive"] = 'Executive'] = "Executive";
        PaperSizeEnum[PaperSizeEnum["Folio"] = 'Folio'] = "Folio";
        PaperSizeEnum[PaperSizeEnum["Ledger"] = 'Ledger'] = "Ledger";
        PaperSizeEnum[PaperSizeEnum["Legal"] = 'Legal'] = "Legal";
        PaperSizeEnum[PaperSizeEnum["Letter"] = 'Letter'] = "Letter";
        PaperSizeEnum[PaperSizeEnum["EnvelopeDL"] = 'EnvelopeDL'] = "EnvelopeDL";
        PaperSizeEnum[PaperSizeEnum["Quarto"] = 'Quarto'] = "Quarto";
        PaperSizeEnum[PaperSizeEnum["Statement"] = 'Statement'] = "Statement";
        PaperSizeEnum[PaperSizeEnum["Tabloid"] = 'Tabloid'] = "Tabloid";
        PaperSizeEnum[PaperSizeEnum["Paper10x14"] = 'Paper10x14'] = "Paper10x14";
        PaperSizeEnum[PaperSizeEnum["Paper11x17"] = 'Paper11x17'] = "Paper11x17";
        PaperSizeEnum[PaperSizeEnum["Number10Envelope"] = 'Number10Envelope'] = "Number10Envelope";
        PaperSizeEnum[PaperSizeEnum["Custom"] = 'Custom'] = "Custom";
    })(PaperSizeEnum = PageSetup.PaperSizeEnum || (PageSetup.PaperSizeEnum = {}));
    let SectionStartEnum;
    (function (SectionStartEnum) {
        SectionStartEnum[SectionStartEnum["Continuous"] = 'Continuous'] = "Continuous";
        SectionStartEnum[SectionStartEnum["NewColumn"] = 'NewColumn'] = "NewColumn";
        SectionStartEnum[SectionStartEnum["NewPage"] = 'NewPage'] = "NewPage";
        SectionStartEnum[SectionStartEnum["EvenPage"] = 'EvenPage'] = "EvenPage";
        SectionStartEnum[SectionStartEnum["OddPage"] = 'OddPage'] = "OddPage";
    })(SectionStartEnum = PageSetup.SectionStartEnum || (PageSetup.SectionStartEnum = {}));
    let VerticalAlignmentEnum;
    (function (VerticalAlignmentEnum) {
        VerticalAlignmentEnum[VerticalAlignmentEnum["Top"] = 'Top'] = "Top";
        VerticalAlignmentEnum[VerticalAlignmentEnum["Center"] = 'Center'] = "Center";
        VerticalAlignmentEnum[VerticalAlignmentEnum["Justify"] = 'Justify'] = "Justify";
        VerticalAlignmentEnum[VerticalAlignmentEnum["Bottom"] = 'Bottom'] = "Bottom";
    })(VerticalAlignmentEnum = PageSetup.VerticalAlignmentEnum || (PageSetup.VerticalAlignmentEnum = {}));
})(PageSetup = exports.PageSetup || (exports.PageSetup = {}));
// tslint:enable:quotemark
