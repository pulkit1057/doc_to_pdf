import { AttributeInfo } from '../internal/attributeInfo';
import { ModelInterface } from './modelInterface';
export declare const importsMapSignature: {};
/**
 * The REST response with a document signature collection.
 * This response is returned by the Service when handling any "https://api.aspose.cloud/v4.0/words/Test.doc/signatures" REST API requests.
 */
export declare class Signature implements ModelInterface {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets the signing purpose comment.
     */
    comments: string;
    /**
     * Gets or sets the subject distinguished name of the certificate isuuer.
     */
    issuerName: string;
    /**
     * Gets or sets a value indicating whether this digital signature is valid.
     */
    isValid: boolean;
    /**
     * Gets or sets the type of the digital signature.
     */
    signatureType: string;
    /**
     * Gets or sets an array of bytes representing a signature value as base64 string.
     */
    signatureValue: string;
    /**
     * Gets or sets the time the document was signed.
     */
    signTime: Date;
    /**
     * Gets or sets the subject distinguished name of the certificate that was used to sign the document.
     */
    subjectName: string;
    constructor(init?: Partial<Signature>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
