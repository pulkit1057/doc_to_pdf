import { AttributeInfo } from '../internal/attributeInfo';
import { ModelInterface } from './modelInterface';
import { PdfPermissions } from './pdfPermissions';
export declare const importsMapPdfEncryptionDetailsData: {
    PdfPermissions: typeof PdfPermissions;
};
/**
 * Container class for details of encryption.
 */
export declare class PdfEncryptionDetailsData implements ModelInterface {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets the owner password for the encrypted PDF document.
     */
    ownerPassword: string;
    /**
     * Gets or sets the operations that are allowed to a user on the encrypted PDF document.
     */
    permissions: Array<PdfPermissions>;
    /**
     * Gets or sets the user password required for opening the encrypted PDF document.
     */
    userPassword: string;
    constructor(init?: Partial<PdfEncryptionDetailsData>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
