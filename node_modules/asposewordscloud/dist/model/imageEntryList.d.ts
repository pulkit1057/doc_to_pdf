import { AttributeInfo } from '../internal/attributeInfo';
import { BaseEntryList } from './baseEntryList';
import { ImageEntry } from './imageEntry';
export declare const importsMapImageEntryList: {
    BaseEntryList: typeof BaseEntryList;
    ImageEntry: typeof ImageEntry;
};
/**
 * Represents a list of images which will be appended to the original resource document or image.
 */
export declare class ImageEntryList extends BaseEntryList {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets a value indicating whether each image should be added to a new page in the document.
     * This value only has an effect when adding images to a document that supports pagination.
     */
    appendEachImageOnNewPage: boolean;
    /**
     * Gets or sets the list of images.
     */
    imageEntries: Array<ImageEntry>;
    constructor(init?: Partial<ImageEntryList>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
