"use strict";
/*
 * --------------------------------------------------------------------------------
 * <copyright company="Aspose" file="listInsert.ts">
 *   Copyright (c) 2024 Aspose.Words for Cloud
 * </copyright>
 * <summary>
 *   Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 * </summary>
 * --------------------------------------------------------------------------------
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListInsert = exports.importsMapListInsert = void 0;
exports.importsMapListInsert = {};
/**
 * Insert document to document list.
 */
class ListInsert {
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return ListInsert.attributeTypeMap;
    }
    constructor(init) {
        Object.assign(this, init);
    }
    collectFilesContent(_resultFilesContent) {
    }
    validate() {
        if (this.template === null || this.template === undefined) {
            throw new Error('Property Template in ListInsert is required.');
        }
    }
}
exports.ListInsert = ListInsert;
/**
 * Attribute type map
 */
ListInsert.attributeTypeMap = [
    {
        name: "template",
        baseName: "Template",
        type: "ListInsert.TemplateEnum",
    }
];
/**
 * Enums for ListInsert
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (ListInsert) {
    let TemplateEnum;
    (function (TemplateEnum) {
        TemplateEnum[TemplateEnum["BulletDefault"] = 'BulletDefault'] = "BulletDefault";
        TemplateEnum[TemplateEnum["BulletDisk"] = 'BulletDisk'] = "BulletDisk";
        TemplateEnum[TemplateEnum["BulletCircle"] = 'BulletCircle'] = "BulletCircle";
        TemplateEnum[TemplateEnum["BulletSquare"] = 'BulletSquare'] = "BulletSquare";
        TemplateEnum[TemplateEnum["BulletDiamonds"] = 'BulletDiamonds'] = "BulletDiamonds";
        TemplateEnum[TemplateEnum["BulletArrowHead"] = 'BulletArrowHead'] = "BulletArrowHead";
        TemplateEnum[TemplateEnum["BulletTick"] = 'BulletTick'] = "BulletTick";
        TemplateEnum[TemplateEnum["NumberDefault"] = 'NumberDefault'] = "NumberDefault";
        TemplateEnum[TemplateEnum["NumberArabicDot"] = 'NumberArabicDot'] = "NumberArabicDot";
        TemplateEnum[TemplateEnum["NumberArabicParenthesis"] = 'NumberArabicParenthesis'] = "NumberArabicParenthesis";
        TemplateEnum[TemplateEnum["NumberUppercaseRomanDot"] = 'NumberUppercaseRomanDot'] = "NumberUppercaseRomanDot";
        TemplateEnum[TemplateEnum["NumberUppercaseLetterDot"] = 'NumberUppercaseLetterDot'] = "NumberUppercaseLetterDot";
        TemplateEnum[TemplateEnum["NumberLowercaseLetterParenthesis"] = 'NumberLowercaseLetterParenthesis'] = "NumberLowercaseLetterParenthesis";
        TemplateEnum[TemplateEnum["NumberLowercaseLetterDot"] = 'NumberLowercaseLetterDot'] = "NumberLowercaseLetterDot";
        TemplateEnum[TemplateEnum["NumberLowercaseRomanDot"] = 'NumberLowercaseRomanDot'] = "NumberLowercaseRomanDot";
        TemplateEnum[TemplateEnum["OutlineNumbers"] = 'OutlineNumbers'] = "OutlineNumbers";
        TemplateEnum[TemplateEnum["OutlineLegal"] = 'OutlineLegal'] = "OutlineLegal";
        TemplateEnum[TemplateEnum["OutlineBullets"] = 'OutlineBullets'] = "OutlineBullets";
        TemplateEnum[TemplateEnum["OutlineHeadingsArticleSection"] = 'OutlineHeadingsArticleSection'] = "OutlineHeadingsArticleSection";
        TemplateEnum[TemplateEnum["OutlineHeadingsLegal"] = 'OutlineHeadingsLegal'] = "OutlineHeadingsLegal";
        TemplateEnum[TemplateEnum["OutlineHeadingsNumbers"] = 'OutlineHeadingsNumbers'] = "OutlineHeadingsNumbers";
        TemplateEnum[TemplateEnum["OutlineHeadingsChapter"] = 'OutlineHeadingsChapter'] = "OutlineHeadingsChapter";
    })(TemplateEnum = ListInsert.TemplateEnum || (ListInsert.TemplateEnum = {}));
})(ListInsert = exports.ListInsert || (exports.ListInsert = {}));
// tslint:enable:quotemark
