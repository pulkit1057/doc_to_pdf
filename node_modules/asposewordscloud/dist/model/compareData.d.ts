import { AttributeInfo } from '../internal/attributeInfo';
import { ModelInterface } from './modelInterface';
import { CompareOptions } from './compareOptions';
import { FileReference } from './fileReference';
export declare const importsMapCompareData: {
    CompareOptions: typeof CompareOptions;
    FileReference: typeof FileReference;
};
/**
 * Container class for compare documents.
 */
export declare class CompareData implements ModelInterface {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets the initials of the author to use for revisions.
     */
    author: string;
    /**
     * Gets or sets the compare options.
     */
    compareOptions: CompareOptions;
    /**
     * Gets or sets the path to document to compare at the server.
     */
    comparingWithDocument: string;
    /**
     * Gets or sets the date and time to use for revisions.
     */
    dateTime: Date;
    /**
     * Gets or sets the file reference.
     */
    fileReference: FileReference;
    /**
     * Gets or sets the result document format.
     */
    resultDocumentFormat: string;
    constructor(init?: Partial<CompareData>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
