import { AttributeInfo } from '../internal/attributeInfo';
import { SaveOptionsData } from './saveOptionsData';
export declare const importsMapTxtSaveOptionsBaseData: {
    SaveOptionsData: typeof SaveOptionsData;
};
/**
 * Base class for save options of text formats.
 */
export declare abstract class TxtSaveOptionsBaseData extends SaveOptionsData {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets the character encoding to use when exporting in plain text format.
     */
    encoding: string;
    /**
     * Gets or sets the option that controls whether to output headers and footers when exporting in plain text format.
     * default value is TxtExportHeadersFootersMode.PrimaryOnly.
     */
    exportHeadersFootersMode: TxtSaveOptionsBaseData.ExportHeadersFootersModeEnum;
    /**
     * Gets or sets a value indicating whether the page breaks should be preserved during export.
     * The default value is false.
     */
    forcePageBreaks: boolean;
    /**
     * Gets or sets the string to use as a paragraph break when exporting in plain text format.
     */
    paragraphBreak: string;
    constructor(init?: Partial<TxtSaveOptionsBaseData>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
/**
 * Enums for TxtSaveOptionsBaseData
 */
export declare namespace TxtSaveOptionsBaseData {
    enum ExportHeadersFootersModeEnum {
        None,
        PrimaryOnly,
        AllAtEnd
    }
}
