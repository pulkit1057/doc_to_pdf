import { AttributeInfo } from '../internal/attributeInfo';
import { HeaderFooterLink } from './headerFooterLink';
import { LinkElement } from './linkElement';
import { NodeLink } from './nodeLink';
export declare const importsMapHeaderFooter: {
    HeaderFooterLink: typeof HeaderFooterLink;
    LinkElement: typeof LinkElement;
    NodeLink: typeof NodeLink;
};
/**
 * DTO container with a section element.
 */
export declare class HeaderFooter extends HeaderFooterLink {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets the child nodes.
     */
    childNodes: Array<NodeLink>;
    /**
     * Gets or sets the link to Paragraphs resource.
     */
    paragraphs: LinkElement;
    /**
     * Gets or sets the link to DrawingObjects resource.
     */
    drawingObjects: LinkElement;
    constructor(init?: Partial<HeaderFooter>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
