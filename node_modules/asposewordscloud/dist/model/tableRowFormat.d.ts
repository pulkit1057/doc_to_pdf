import { AttributeInfo } from '../internal/attributeInfo';
import { LinkElement } from './linkElement';
export declare const importsMapTableRowFormat: {
    LinkElement: typeof LinkElement;
};
/**
 * DTO container with formatting for a table row.
 */
export declare class TableRowFormat extends LinkElement {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets the height of the table row in points.
     */
    height: number;
    /**
     * Gets or sets the rule for determining the height of the table row.
     */
    heightRule: TableRowFormat.HeightRuleEnum;
    /**
     * Gets or sets a value indicating whether the text in a table row is allowed to split across a page break.
     */
    allowBreakAcrossPages: boolean;
    /**
     * Gets or sets a value indicating whether the row is repeated as a table heading on every page when the table spans more than one page.
     */
    headingFormat: boolean;
    constructor(init?: Partial<TableRowFormat>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
/**
 * Enums for TableRowFormat
 */
export declare namespace TableRowFormat {
    enum HeightRuleEnum {
        AtLeast,
        Exactly,
        Auto
    }
}
