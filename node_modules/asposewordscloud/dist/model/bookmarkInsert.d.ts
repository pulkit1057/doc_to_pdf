import { AttributeInfo } from '../internal/attributeInfo';
import { ModelInterface } from './modelInterface';
import { Position } from './position';
export declare const importsMapBookmarkInsert: {
    Position: typeof Position;
};
/**
 * Represents a bookmark to insert.
 */
export declare class BookmarkInsert implements ModelInterface {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets the name of the bookmark.
     */
    name: string;
    /**
     * Gets or sets text, enclosed in the bookmark.
     */
    text: string;
    /**
     * Gets or sets the link to start bookmark node.
     */
    startRange: Position;
    /**
     * Gets or sets the link to end bookmark node.
     */
    endRange: Position;
    constructor(init?: Partial<BookmarkInsert>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
