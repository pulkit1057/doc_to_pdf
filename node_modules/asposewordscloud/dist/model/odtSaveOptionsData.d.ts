import { AttributeInfo } from '../internal/attributeInfo';
import { SaveOptionsData } from './saveOptionsData';
export declare const importsMapOdtSaveOptionsData: {
    SaveOptionsData: typeof SaveOptionsData;
};
/**
 * Container class for odt/ott save options.
 */
export declare class OdtSaveOptionsData extends SaveOptionsData {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets a value indicating whether export should correspond to ODT specification 1.1 strictly.
     */
    isStrictSchema11: boolean;
    /**
     * Gets or sets the units of measure to apply to document content. The default value is Aspose.Words.Saving.OdtSaveMeasureUnit.Centimeters.
     * Open Office uses centimeters when specifying lengths, widths and other measurable formatting and content properties in documents whereas MS Office uses inches.
     */
    measureUnit: OdtSaveOptionsData.MeasureUnitEnum;
    /**
     * Gets or sets the password to encrypt document.
     * In order to save document without encryption this property should be null or empty string.
     */
    password: string;
    /**
     * Gets or sets a value indicating whether to use pretty formats output.
     */
    prettyFormat: boolean;
    constructor(init?: Partial<OdtSaveOptionsData>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
/**
 * Enums for OdtSaveOptionsData
 */
export declare namespace OdtSaveOptionsData {
    enum MeasureUnitEnum {
        Centimeters,
        Inches
    }
}
