"use strict";
/*
 * --------------------------------------------------------------------------------
 * <copyright company="Aspose" file="listLevelUpdate.ts">
 *   Copyright (c) 2024 Aspose.Words for Cloud
 * </copyright>
 * <summary>
 *   Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 * </summary>
 * --------------------------------------------------------------------------------
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListLevelUpdate = exports.importsMapListLevelUpdate = void 0;
exports.importsMapListLevelUpdate = {};
/**
 * Represents a document list levels.
 */
class ListLevelUpdate {
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return ListLevelUpdate.attributeTypeMap;
    }
    constructor(init) {
        Object.assign(this, init);
    }
    collectFilesContent(_resultFilesContent) {
    }
    validate() {
    }
}
exports.ListLevelUpdate = ListLevelUpdate;
/**
 * Attribute type map
 */
ListLevelUpdate.attributeTypeMap = [
    {
        name: "startAt",
        baseName: "StartAt",
        type: "number",
    },
    {
        name: "numberStyle",
        baseName: "NumberStyle",
        type: "ListLevelUpdate.NumberStyleEnum",
    },
    {
        name: "numberFormat",
        baseName: "NumberFormat",
        type: "string",
    },
    {
        name: "alignment",
        baseName: "Alignment",
        type: "ListLevelUpdate.AlignmentEnum",
    },
    {
        name: "isLegal",
        baseName: "IsLegal",
        type: "boolean",
    },
    {
        name: "restartAfterLevel",
        baseName: "RestartAfterLevel",
        type: "number",
    },
    {
        name: "trailingCharacter",
        baseName: "TrailingCharacter",
        type: "ListLevelUpdate.TrailingCharacterEnum",
    },
    {
        name: "tabPosition",
        baseName: "TabPosition",
        type: "number",
    },
    {
        name: "numberPosition",
        baseName: "NumberPosition",
        type: "number",
    },
    {
        name: "textPosition",
        baseName: "TextPosition",
        type: "number",
    }
];
/**
 * Enums for ListLevelUpdate
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (ListLevelUpdate) {
    let NumberStyleEnum;
    (function (NumberStyleEnum) {
        NumberStyleEnum[NumberStyleEnum["Arabic"] = 'Arabic'] = "Arabic";
        NumberStyleEnum[NumberStyleEnum["UppercaseRoman"] = 'UppercaseRoman'] = "UppercaseRoman";
        NumberStyleEnum[NumberStyleEnum["LowercaseRoman"] = 'LowercaseRoman'] = "LowercaseRoman";
        NumberStyleEnum[NumberStyleEnum["UppercaseLetter"] = 'UppercaseLetter'] = "UppercaseLetter";
        NumberStyleEnum[NumberStyleEnum["LowercaseLetter"] = 'LowercaseLetter'] = "LowercaseLetter";
        NumberStyleEnum[NumberStyleEnum["Ordinal"] = 'Ordinal'] = "Ordinal";
        NumberStyleEnum[NumberStyleEnum["Number"] = 'Number'] = "Number";
        NumberStyleEnum[NumberStyleEnum["OrdinalText"] = 'OrdinalText'] = "OrdinalText";
        NumberStyleEnum[NumberStyleEnum["Hex"] = 'Hex'] = "Hex";
        NumberStyleEnum[NumberStyleEnum["ChicagoManual"] = 'ChicagoManual'] = "ChicagoManual";
        NumberStyleEnum[NumberStyleEnum["Kanji"] = 'Kanji'] = "Kanji";
        NumberStyleEnum[NumberStyleEnum["KanjiDigit"] = 'KanjiDigit'] = "KanjiDigit";
        NumberStyleEnum[NumberStyleEnum["AiueoHalfWidth"] = 'AiueoHalfWidth'] = "AiueoHalfWidth";
        NumberStyleEnum[NumberStyleEnum["IrohaHalfWidth"] = 'IrohaHalfWidth'] = "IrohaHalfWidth";
        NumberStyleEnum[NumberStyleEnum["ArabicFullWidth"] = 'ArabicFullWidth'] = "ArabicFullWidth";
        NumberStyleEnum[NumberStyleEnum["ArabicHalfWidth"] = 'ArabicHalfWidth'] = "ArabicHalfWidth";
        NumberStyleEnum[NumberStyleEnum["KanjiTraditional"] = 'KanjiTraditional'] = "KanjiTraditional";
        NumberStyleEnum[NumberStyleEnum["KanjiTraditional2"] = 'KanjiTraditional2'] = "KanjiTraditional2";
        NumberStyleEnum[NumberStyleEnum["NumberInCircle"] = 'NumberInCircle'] = "NumberInCircle";
        NumberStyleEnum[NumberStyleEnum["DecimalFullWidth"] = 'DecimalFullWidth'] = "DecimalFullWidth";
        NumberStyleEnum[NumberStyleEnum["Aiueo"] = 'Aiueo'] = "Aiueo";
        NumberStyleEnum[NumberStyleEnum["Iroha"] = 'Iroha'] = "Iroha";
        NumberStyleEnum[NumberStyleEnum["LeadingZero"] = 'LeadingZero'] = "LeadingZero";
        NumberStyleEnum[NumberStyleEnum["Bullet"] = 'Bullet'] = "Bullet";
        NumberStyleEnum[NumberStyleEnum["Ganada"] = 'Ganada'] = "Ganada";
        NumberStyleEnum[NumberStyleEnum["Chosung"] = 'Chosung'] = "Chosung";
        NumberStyleEnum[NumberStyleEnum["GB1"] = 'GB1'] = "GB1";
        NumberStyleEnum[NumberStyleEnum["GB2"] = 'GB2'] = "GB2";
        NumberStyleEnum[NumberStyleEnum["GB3"] = 'GB3'] = "GB3";
        NumberStyleEnum[NumberStyleEnum["GB4"] = 'GB4'] = "GB4";
        NumberStyleEnum[NumberStyleEnum["Zodiac1"] = 'Zodiac1'] = "Zodiac1";
        NumberStyleEnum[NumberStyleEnum["Zodiac2"] = 'Zodiac2'] = "Zodiac2";
        NumberStyleEnum[NumberStyleEnum["Zodiac3"] = 'Zodiac3'] = "Zodiac3";
        NumberStyleEnum[NumberStyleEnum["TradChinNum1"] = 'TradChinNum1'] = "TradChinNum1";
        NumberStyleEnum[NumberStyleEnum["TradChinNum2"] = 'TradChinNum2'] = "TradChinNum2";
        NumberStyleEnum[NumberStyleEnum["TradChinNum3"] = 'TradChinNum3'] = "TradChinNum3";
        NumberStyleEnum[NumberStyleEnum["TradChinNum4"] = 'TradChinNum4'] = "TradChinNum4";
        NumberStyleEnum[NumberStyleEnum["SimpChinNum1"] = 'SimpChinNum1'] = "SimpChinNum1";
        NumberStyleEnum[NumberStyleEnum["SimpChinNum2"] = 'SimpChinNum2'] = "SimpChinNum2";
        NumberStyleEnum[NumberStyleEnum["SimpChinNum3"] = 'SimpChinNum3'] = "SimpChinNum3";
        NumberStyleEnum[NumberStyleEnum["SimpChinNum4"] = 'SimpChinNum4'] = "SimpChinNum4";
        NumberStyleEnum[NumberStyleEnum["HanjaRead"] = 'HanjaRead'] = "HanjaRead";
        NumberStyleEnum[NumberStyleEnum["HanjaReadDigit"] = 'HanjaReadDigit'] = "HanjaReadDigit";
        NumberStyleEnum[NumberStyleEnum["Hangul"] = 'Hangul'] = "Hangul";
        NumberStyleEnum[NumberStyleEnum["Hanja"] = 'Hanja'] = "Hanja";
        NumberStyleEnum[NumberStyleEnum["Hebrew1"] = 'Hebrew1'] = "Hebrew1";
        NumberStyleEnum[NumberStyleEnum["Arabic1"] = 'Arabic1'] = "Arabic1";
        NumberStyleEnum[NumberStyleEnum["Hebrew2"] = 'Hebrew2'] = "Hebrew2";
        NumberStyleEnum[NumberStyleEnum["Arabic2"] = 'Arabic2'] = "Arabic2";
        NumberStyleEnum[NumberStyleEnum["HindiLetter1"] = 'HindiLetter1'] = "HindiLetter1";
        NumberStyleEnum[NumberStyleEnum["HindiLetter2"] = 'HindiLetter2'] = "HindiLetter2";
        NumberStyleEnum[NumberStyleEnum["HindiArabic"] = 'HindiArabic'] = "HindiArabic";
        NumberStyleEnum[NumberStyleEnum["HindiCardinalText"] = 'HindiCardinalText'] = "HindiCardinalText";
        NumberStyleEnum[NumberStyleEnum["ThaiLetter"] = 'ThaiLetter'] = "ThaiLetter";
        NumberStyleEnum[NumberStyleEnum["ThaiArabic"] = 'ThaiArabic'] = "ThaiArabic";
        NumberStyleEnum[NumberStyleEnum["ThaiCardinalText"] = 'ThaiCardinalText'] = "ThaiCardinalText";
        NumberStyleEnum[NumberStyleEnum["VietCardinalText"] = 'VietCardinalText'] = "VietCardinalText";
        NumberStyleEnum[NumberStyleEnum["NumberInDash"] = 'NumberInDash'] = "NumberInDash";
        NumberStyleEnum[NumberStyleEnum["LowercaseRussian"] = 'LowercaseRussian'] = "LowercaseRussian";
        NumberStyleEnum[NumberStyleEnum["UppercaseRussian"] = 'UppercaseRussian'] = "UppercaseRussian";
        NumberStyleEnum[NumberStyleEnum["None"] = 'None'] = "None";
        NumberStyleEnum[NumberStyleEnum["Custom"] = 'Custom'] = "Custom";
    })(NumberStyleEnum = ListLevelUpdate.NumberStyleEnum || (ListLevelUpdate.NumberStyleEnum = {}));
    let AlignmentEnum;
    (function (AlignmentEnum) {
        AlignmentEnum[AlignmentEnum["Left"] = 'Left'] = "Left";
        AlignmentEnum[AlignmentEnum["Center"] = 'Center'] = "Center";
        AlignmentEnum[AlignmentEnum["Right"] = 'Right'] = "Right";
    })(AlignmentEnum = ListLevelUpdate.AlignmentEnum || (ListLevelUpdate.AlignmentEnum = {}));
    let TrailingCharacterEnum;
    (function (TrailingCharacterEnum) {
        TrailingCharacterEnum[TrailingCharacterEnum["Tab"] = 'Tab'] = "Tab";
        TrailingCharacterEnum[TrailingCharacterEnum["Space"] = 'Space'] = "Space";
        TrailingCharacterEnum[TrailingCharacterEnum["Nothing"] = 'Nothing'] = "Nothing";
    })(TrailingCharacterEnum = ListLevelUpdate.TrailingCharacterEnum || (ListLevelUpdate.TrailingCharacterEnum = {}));
})(ListLevelUpdate = exports.ListLevelUpdate || (exports.ListLevelUpdate = {}));
// tslint:enable:quotemark
