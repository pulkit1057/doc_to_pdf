import { AttributeInfo } from '../internal/attributeInfo';
import { ProtectionRequestBase } from './protectionRequestBase';
export declare const importsMapProtectionRequestV2: {
    ProtectionRequestBase: typeof ProtectionRequestBase;
};
/**
 * Request on changing of protection.
 */
export declare class ProtectionRequestV2 extends ProtectionRequestBase {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets the new password for the document protection.
     * This property is required, but empty value is allowed.
     */
    protectionPassword: string;
    /**
     * Gets or sets the new type of the document protection.
     */
    protectionType: ProtectionRequestV2.ProtectionTypeEnum;
    constructor(init?: Partial<ProtectionRequestV2>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
/**
 * Enums for ProtectionRequestV2
 */
export declare namespace ProtectionRequestV2 {
    enum ProtectionTypeEnum {
        AllowOnlyRevisions,
        AllowOnlyComments,
        AllowOnlyFormFields,
        ReadOnly,
        NoProtection
    }
}
