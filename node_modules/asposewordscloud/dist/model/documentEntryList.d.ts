import { AttributeInfo } from '../internal/attributeInfo';
import { BaseEntryList } from './baseEntryList';
import { DocumentEntry } from './documentEntry';
export declare const importsMapDocumentEntryList: {
    BaseEntryList: typeof BaseEntryList;
    DocumentEntry: typeof DocumentEntry;
};
/**
 * Represents a list of documents which will be appended to the original resource document.
 */
export declare class DocumentEntryList extends BaseEntryList {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets a value indicating whether to append all documents to the same section.
     */
    appendAllEntriesToOneSection: boolean;
    /**
     * Gets or sets a value indicating whether to apply headers and footers from base document to appending documents. The default value is true.
     */
    applyBaseDocumentHeadersAndFootersToAppendingDocuments: boolean;
    /**
     * Gets or sets the list of documents.
     */
    documentEntries: Array<DocumentEntry>;
    constructor(init?: Partial<DocumentEntryList>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
