import { AttributeInfo } from '../internal/attributeInfo';
import { FileReference } from './fileReference';
import { WatermarkDataBase } from './watermarkDataBase';
export declare const importsMapWatermarkDataImage: {
    FileReference: typeof FileReference;
    WatermarkDataBase: typeof WatermarkDataBase;
};
/**
 * Class for insert watermark image request building.
 */
export declare class WatermarkDataImage extends WatermarkDataBase {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets the watermark image.
     */
    image: FileReference;
    /**
     * Gets or sets a boolean value which is responsible for washout effect of the watermark. The default value is true.
     */
    isWashout: boolean;
    /**
     * Gets or sets the scale factor expressed as a fraction of the image. The default value is 0 - auto.
     * Valid values range from 0 to 65.5 inclusive. Auto scale means that the watermark will be scaled to its max width and max height relative to the page margins.
     */
    scale: number;
    constructor(init?: Partial<WatermarkDataImage>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
