import { AttributeInfo } from '../internal/attributeInfo';
import { SaveOptionsData } from './saveOptionsData';
export declare const importsMapOoxmlSaveOptionsData: {
    SaveOptionsData: typeof SaveOptionsData;
};
/**
 * Container class for docx/docm/dotx/dotm/flatopc save options.
 */
export declare abstract class OoxmlSaveOptionsData extends SaveOptionsData {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets the oOXML version for the output document.
     */
    compliance: OoxmlSaveOptionsData.ComplianceEnum;
    /**
     * Gets or sets the compression level.
     */
    compressionLevel: OoxmlSaveOptionsData.CompressionLevelEnum;
    /**
     * Gets or sets the password to encrypt document using ECMA376 Standard encryption algorithm.
     */
    password: string;
    /**
     * Gets or sets a value indicating whether to use pretty formats output.
     */
    prettyFormat: boolean;
    constructor(init?: Partial<OoxmlSaveOptionsData>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
/**
 * Enums for OoxmlSaveOptionsData
 */
export declare namespace OoxmlSaveOptionsData {
    enum ComplianceEnum {
        Ecma376_2006,
        Iso29500_2008_Transitional,
        Iso29500_2008_Strict
    }
    enum CompressionLevelEnum {
        Normal,
        Maximum,
        Fast,
        SuperFast
    }
}
