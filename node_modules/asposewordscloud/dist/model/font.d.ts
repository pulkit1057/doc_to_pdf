import { AttributeInfo } from '../internal/attributeInfo';
import { Border } from './border';
import { LinkElement } from './linkElement';
import { XmlColor } from './xmlColor';
export declare const importsMapFont: {
    Border: typeof Border;
    LinkElement: typeof LinkElement;
    XmlColor: typeof XmlColor;
};
/**
 * DTO container with a font element.
 */
export declare class Font extends LinkElement {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets a value indicating whether the font is formatted as all capital letters.
     */
    allCaps: boolean;
    /**
     * Gets or sets a value indicating whether the contents of this run shall have right-to-left characteristics.
     * This property, when on, shall not be used with strongly left-to-right text. Any behavior under that condition is unspecified. This property, when off, shall not be used with strong right-to-left text. Any behavior under that condition is unspecified.When the contents of this run are displayed, all characters shall be treated as complex script characters for formatting purposes. This means that BoldBi, ItalicBi, SizeBi and a corresponding font name will be used when rendering this run.Also, when the contents of this run are displayed, this property acts as a right-to-left override for characters which are classified as "weak types" and "neutral types".
     */
    bidi: boolean;
    /**
     * Gets or sets a value indicating whether the font is formatted as bold.
     */
    bold: boolean;
    /**
     * Gets or sets a value indicating whether the right-to-left text is formatted as bold.
     */
    boldBi: boolean;
    /**
     * Gets or sets the border object, that specifies border for the font.
     */
    border: Border;
    /**
     * Gets or sets the color of the font.
     */
    color: XmlColor;
    /**
     * Gets or sets a value indicating whether the contents of this run shall be treated as complex script text regardless of their Unicode character values when determining the formatting for this run.
     */
    complexScript: boolean;
    /**
     * Gets or sets a value indicating whether the font is formatted as double strikethrough text.
     */
    doubleStrikeThrough: boolean;
    /**
     * Gets or sets a value indicating whether the font is formatted as embossed.
     */
    emboss: boolean;
    /**
     * Gets or sets a value indicating whether the font is formatted as engraved.
     */
    engrave: boolean;
    /**
     * Gets or sets a value indicating whether the font is formatted as hidden text.
     */
    hidden: boolean;
    /**
     * Gets or sets the highlight (marker) color.
     */
    highlightColor: XmlColor;
    /**
     * Gets or sets a value indicating whether the font is formatted as italic.
     */
    italic: boolean;
    /**
     * Gets or sets a value indicating whether the right-to-left text is formatted as italic.
     */
    italicBi: boolean;
    /**
     * Gets or sets the font size at which kerning starts.
     */
    kerning: number;
    /**
     * Gets or sets the locale identifier (language) of the formatted characters.
     * For the list of locale identifiers see http://www.microsoft.com/globaldev/reference/lcid-all.mspx.
     */
    localeId: number;
    /**
     * Gets or sets the locale identifier (language) of the formatted right-to-left characters.
     * For the list of locale identifiers see http://www.microsoft.com/globaldev/reference/lcid-all.mspx.
     */
    localeIdBi: number;
    /**
     * Gets or sets the locale identifier (language) of the formatted Asian characters.
     * For the list of locale identifiers see http://www.microsoft.com/globaldev/reference/lcid-all.mspx.
     */
    localeIdFarEast: number;
    /**
     * Gets or sets the name of the font.
     */
    name: string;
    /**
     * Gets or sets the font used for Latin text (characters with character codes from 0 (zero) through 127).
     */
    nameAscii: string;
    /**
     * Gets or sets the name of the font in a right-to-left language document.
     */
    nameBi: string;
    /**
     * Gets or sets the East Asian font name.
     */
    nameFarEast: string;
    /**
     * Gets or sets the font used for characters with character codes from 128 through 255.
     */
    nameOther: string;
    /**
     * Gets or sets a value indicating whether the formatted characters are not to be spell checked.
     */
    noProofing: boolean;
    /**
     * Gets or sets a value indicating whether the font is formatted as outline.
     */
    outline: boolean;
    /**
     * Gets or sets the position of text (in points) relative to the base line.
     * A positive number raises the text, and a negative number lowers it.
     */
    position: number;
    /**
     * Gets or sets character width scaling in percent.
     */
    scaling: number;
    /**
     * Gets or sets a value indicating whether the font is formatted as shadowed.
     */
    shadow: boolean;
    /**
     * Gets or sets the font size in points.
     */
    size: number;
    /**
     * Gets or sets the font size in points used in a right-to-left document.
     */
    sizeBi: number;
    /**
     * Gets or sets a value indicating whether the font is formatted as small capital letters.
     */
    smallCaps: boolean;
    /**
     * Gets or sets the spacing (in points) between characters.
     */
    spacing: number;
    /**
     * Gets or sets a value indicating whether the font is formatted as strikethrough text.
     */
    strikeThrough: boolean;
    /**
     * Gets or sets the locale independent style identifier of the character style applied to this formatting.
     */
    styleIdentifier: Font.StyleIdentifierEnum;
    /**
     * Gets or sets the name of the character style applied to this formatting.
     */
    styleName: string;
    /**
     * Gets or sets a value indicating whether the font is formatted as subscript.
     */
    subscript: boolean;
    /**
     * Gets or sets a value indicating whether the font is formatted as superscript.
     */
    superscript: boolean;
    /**
     * Gets or sets the font animation effect.
     */
    textEffect: Font.TextEffectEnum;
    /**
     * Gets or sets the type of underline applied to the font.
     */
    underline: Font.UnderlineEnum;
    /**
     * Gets or sets the color of the underline applied to the font.
     */
    underlineColor: XmlColor;
    constructor(init?: Partial<Font>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
/**
 * Enums for Font
 */
export declare namespace Font {
    enum StyleIdentifierEnum {
        Normal,
        Heading1,
        Heading2,
        Heading3,
        Heading4,
        Heading5,
        Heading6,
        Heading7,
        Heading8,
        Heading9,
        Index1,
        Index2,
        Index3,
        Index4,
        Index5,
        Index6,
        Index7,
        Index8,
        Index9,
        Toc1,
        Toc2,
        Toc3,
        Toc4,
        Toc5,
        Toc6,
        Toc7,
        Toc8,
        Toc9,
        NormalIndent,
        FootnoteText,
        CommentText,
        Header,
        Footer,
        IndexHeading,
        Caption,
        TableOfFigures,
        EnvelopeAddress,
        EnvelopeReturn,
        FootnoteReference,
        CommentReference,
        LineNumber,
        PageNumber,
        EndnoteReference,
        EndnoteText,
        TableOfAuthorities,
        Macro,
        ToaHeading,
        List,
        ListBullet,
        ListNumber,
        List2,
        List3,
        List4,
        List5,
        ListBullet2,
        ListBullet3,
        ListBullet4,
        ListBullet5,
        ListNumber2,
        ListNumber3,
        ListNumber4,
        ListNumber5,
        Title,
        Closing,
        Signature,
        DefaultParagraphFont,
        BodyText,
        BodyTextInd,
        ListContinue,
        ListContinue2,
        ListContinue3,
        ListContinue4,
        ListContinue5,
        MessageHeader,
        Subtitle,
        Salutation,
        Date,
        BodyText1I,
        BodyText1I2,
        NoteHeading,
        BodyText2,
        BodyText3,
        BodyTextInd2,
        BodyTextInd3,
        BlockText,
        Hyperlink,
        FollowedHyperlink,
        Strong,
        Emphasis,
        DocumentMap,
        PlainText,
        EmailSignature,
        HtmlTopOfForm,
        HtmlBottomOfForm,
        NormalWeb,
        HtmlAcronym,
        HtmlAddress,
        HtmlCite,
        HtmlCode,
        HtmlDefinition,
        HtmlKeyboard,
        HtmlPreformatted,
        HtmlSample,
        HtmlTypewriter,
        HtmlVariable,
        TableNormal,
        CommentSubject,
        NoList,
        OutlineList1,
        OutlineList2,
        OutlineList3,
        TableSimple1,
        TableSimple2,
        TableSimple3,
        TableClassic1,
        TableClassic2,
        TableClassic3,
        TableClassic4,
        TableColorful1,
        TableColorful2,
        TableColorful3,
        TableColumns1,
        TableColumns2,
        TableColumns3,
        TableColumns4,
        TableColumns5,
        TableGrid1,
        TableGrid2,
        TableGrid3,
        TableGrid4,
        TableGrid5,
        TableGrid6,
        TableGrid7,
        TableGrid8,
        TableList1,
        TableList2,
        TableList3,
        TableList4,
        TableList5,
        TableList6,
        TableList7,
        TableList8,
        Table3DEffects1,
        Table3DEffects2,
        Table3DEffects3,
        TableContemporary,
        TableElegant,
        TableProfessional,
        TableSubtle1,
        TableSubtle2,
        TableWeb1,
        TableWeb2,
        TableWeb3,
        BalloonText,
        TableGrid,
        TableTheme,
        PlaceholderText,
        NoSpacing,
        LightShading,
        LightList,
        LightGrid,
        MediumShading1,
        MediumShading2,
        MediumList1,
        MediumList2,
        MediumGrid1,
        MediumGrid2,
        MediumGrid3,
        DarkList,
        ColorfulShading,
        ColorfulList,
        ColorfulGrid,
        LightShadingAccent1,
        LightListAccent1,
        LightGridAccent1,
        MediumShading1Accent1,
        MediumShading2Accent1,
        MediumList1Accent1,
        Revision,
        ListParagraph,
        Quote,
        IntenseQuote,
        MediumList2Accent1,
        MediumGrid1Accent1,
        MediumGrid2Accent1,
        MediumGrid3Accent1,
        DarkListAccent1,
        ColorfulShadingAccent1,
        ColorfulListAccent1,
        ColorfulGridAccent1,
        LightShadingAccent2,
        LightListAccent2,
        LightGridAccent2,
        MediumShading1Accent2,
        MediumShading2Accent2,
        MediumList1Accent2,
        MediumList2Accent2,
        MediumGrid1Accent2,
        MediumGrid2Accent2,
        MediumGrid3Accent2,
        DarkListAccent2,
        ColorfulShadingAccent2,
        ColorfulListAccent2,
        ColorfulGridAccent2,
        LightShadingAccent3,
        LightListAccent3,
        LightGridAccent3,
        MediumShading1Accent3,
        MediumShading2Accent3,
        MediumList1Accent3,
        MediumList2Accent3,
        MediumGrid1Accent3,
        MediumGrid2Accent3,
        MediumGrid3Accent3,
        DarkListAccent3,
        ColorfulShadingAccent3,
        ColorfulListAccent3,
        ColorfulGridAccent3,
        LightShadingAccent4,
        LightListAccent4,
        LightGridAccent4,
        MediumShading1Accent4,
        MediumShading2Accent4,
        MediumList1Accent4,
        MediumList2Accent4,
        MediumGrid1Accent4,
        MediumGrid2Accent4,
        MediumGrid3Accent4,
        DarkListAccent4,
        ColorfulShadingAccent4,
        ColorfulListAccent4,
        ColorfulGridAccent4,
        LightShadingAccent5,
        LightListAccent5,
        LightGridAccent5,
        MediumShading1Accent5,
        MediumShading2Accent5,
        MediumList1Accent5,
        MediumList2Accent5,
        MediumGrid1Accent5,
        MediumGrid2Accent5,
        MediumGrid3Accent5,
        DarkListAccent5,
        ColorfulShadingAccent5,
        ColorfulListAccent5,
        ColorfulGridAccent5,
        LightShadingAccent6,
        LightListAccent6,
        LightGridAccent6,
        MediumShading1Accent6,
        MediumShading2Accent6,
        MediumList1Accent6,
        MediumList2Accent6,
        MediumGrid1Accent6,
        MediumGrid2Accent6,
        MediumGrid3Accent6,
        DarkListAccent6,
        ColorfulShadingAccent6,
        ColorfulListAccent6,
        ColorfulGridAccent6,
        SubtleEmphasis,
        IntenseEmphasis,
        SubtleReference,
        IntenseReference,
        BookTitle,
        Bibliography,
        TocHeading,
        PlainTable1,
        PlainTable2,
        PlainTable3,
        PlainTable4,
        PlainTable5,
        TableGridLight,
        GridTable1Light,
        GridTable2,
        GridTable3,
        GridTable4,
        GridTable5Dark,
        GridTable6Colorful,
        GridTable7Colorful,
        GridTable1LightAccent1,
        GridTable2Accent1,
        GridTable3Accent1,
        GridTable4Accent1,
        GridTable5DarkAccent1,
        GridTable6ColorfulAccent1,
        GridTable7ColorfulAccent1,
        GridTable1LightAccent2,
        GridTable2Accent2,
        GridTable3Accent2,
        GridTable4Accent2,
        GridTable5DarkAccent2,
        GridTable6ColorfulAccent2,
        GridTable7ColorfulAccent2,
        GridTable1LightAccent3,
        GridTable2Accent3,
        GridTable3Accent3,
        GridTable4Accent3,
        GridTable5DarkAccent3,
        GridTable6ColorfulAccent3,
        GridTable7ColorfulAccent3,
        GridTable1LightAccent4,
        GridTable2Accent4,
        GridTable3Accent4,
        GridTable4Accent4,
        GridTable5DarkAccent4,
        GridTable6ColorfulAccent4,
        GridTable7ColorfulAccent4,
        GridTable1LightAccent5,
        GridTable2Accent5,
        GridTable3Accent5,
        GridTable4Accent5,
        GridTable5DarkAccent5,
        GridTable6ColorfulAccent5,
        GridTable7ColorfulAccent5,
        GridTable1LightAccent6,
        GridTable2Accent6,
        GridTable3Accent6,
        GridTable4Accent6,
        GridTable5DarkAccent6,
        GridTable6ColorfulAccent6,
        GridTable7ColorfulAccent6,
        ListTable1Light,
        ListTable2,
        ListTable3,
        ListTable4,
        ListTable5Dark,
        ListTable6Colorful,
        ListTable7Colorful,
        ListTable1LightAccent1,
        ListTable2Accent1,
        ListTable3Accent1,
        ListTable4Accent1,
        ListTable5DarkAccent1,
        ListTable6ColorfulAccent1,
        ListTable7ColorfulAccent1,
        ListTable1LightAccent2,
        ListTable2Accent2,
        ListTable3Accent2,
        ListTable4Accent2,
        ListTable5DarkAccent2,
        ListTable6ColorfulAccent2,
        ListTable7ColorfulAccent2,
        ListTable1LightAccent3,
        ListTable2Accent3,
        ListTable3Accent3,
        ListTable4Accent3,
        ListTable5DarkAccent3,
        ListTable6ColorfulAccent3,
        ListTable7ColorfulAccent3,
        ListTable1LightAccent4,
        ListTable2Accent4,
        ListTable3Accent4,
        ListTable4Accent4,
        ListTable5DarkAccent4,
        ListTable6ColorfulAccent4,
        ListTable7ColorfulAccent4,
        ListTable1LightAccent5,
        ListTable2Accent5,
        ListTable3Accent5,
        ListTable4Accent5,
        ListTable5DarkAccent5,
        ListTable6ColorfulAccent5,
        ListTable7ColorfulAccent5,
        ListTable1LightAccent6,
        ListTable2Accent6,
        ListTable3Accent6,
        ListTable4Accent6,
        ListTable5DarkAccent6,
        ListTable6ColorfulAccent6,
        ListTable7ColorfulAccent6,
        SmartLink,
        Mention,
        SmartHyperlink,
        Hashtag,
        UnresolvedMention,
        User,
        Nil
    }
    enum TextEffectEnum {
        None,
        LasVegasLights,
        BlinkingBackground,
        SparkleText,
        MarchingBlackAnts,
        MarchingRedAnts,
        Shimmer
    }
    enum UnderlineEnum {
        None,
        Single,
        Words,
        Double,
        Dotted,
        Thick,
        Dash,
        DotDash,
        DotDotDash,
        Wavy,
        DottedHeavy,
        DashHeavy,
        DotDashHeavy,
        DotDotDashHeavy,
        WavyHeavy,
        DashLong,
        WavyDouble,
        DashLongHeavy
    }
}
