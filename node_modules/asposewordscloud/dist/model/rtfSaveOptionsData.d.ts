import { AttributeInfo } from '../internal/attributeInfo';
import { SaveOptionsData } from './saveOptionsData';
export declare const importsMapRtfSaveOptionsData: {
    SaveOptionsData: typeof SaveOptionsData;
};
/**
 * Container class for rtf save options.
 */
export declare class RtfSaveOptionsData extends SaveOptionsData {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets a value indicating whether to make output RTF documents smaller in size, but if they contain RTL (right-to-left) text, it will not be displayed correctly.
     */
    exportCompactSize: boolean;
    /**
     * Gets or sets a value indicating whether the keywords for "old readers" are written to RTF or not.
     */
    exportImagesForOldReaders: boolean;
    /**
     * Gets or sets a value indicating whether to use pretty formats output.
     */
    prettyFormat: boolean;
    /**
     * Gets or sets a value indicating whether when true all images will be saved as WMF. This option might help to avoid WordPad warning messages.
     */
    saveImagesAsWmf: boolean;
    constructor(init?: Partial<RtfSaveOptionsData>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
