"use strict";
/*
 * --------------------------------------------------------------------------------
 * <copyright company="Aspose" file="tabStopBase.ts">
 *   Copyright (c) 2024 Aspose.Words for Cloud
 * </copyright>
 * <summary>
 *   Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 * </summary>
 * --------------------------------------------------------------------------------
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabStopBase = exports.importsMapTabStopBase = void 0;
exports.importsMapTabStopBase = {};
/**
 * Base class for paragraph format tab stop DTO.
 */
class TabStopBase {
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return TabStopBase.attributeTypeMap;
    }
    constructor(init) {
        Object.assign(this, init);
    }
    collectFilesContent(_resultFilesContent) {
    }
    validate() {
        if (this.alignment === null || this.alignment === undefined) {
            throw new Error('Property Alignment in TabStopBase is required.');
        }
        if (this.leader === null || this.leader === undefined) {
            throw new Error('Property Leader in TabStopBase is required.');
        }
        if (this.position === null || this.position === undefined) {
            throw new Error('Property Position in TabStopBase is required.');
        }
    }
}
exports.TabStopBase = TabStopBase;
/**
 * Attribute type map
 */
TabStopBase.attributeTypeMap = [
    {
        name: "alignment",
        baseName: "Alignment",
        type: "TabStopBase.AlignmentEnum",
    },
    {
        name: "leader",
        baseName: "Leader",
        type: "TabStopBase.LeaderEnum",
    },
    {
        name: "position",
        baseName: "Position",
        type: "number",
    }
];
/**
 * Enums for TabStopBase
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (TabStopBase) {
    let AlignmentEnum;
    (function (AlignmentEnum) {
        AlignmentEnum[AlignmentEnum["Left"] = 'Left'] = "Left";
        AlignmentEnum[AlignmentEnum["Center"] = 'Center'] = "Center";
        AlignmentEnum[AlignmentEnum["Right"] = 'Right'] = "Right";
        AlignmentEnum[AlignmentEnum["Decimal"] = 'Decimal'] = "Decimal";
        AlignmentEnum[AlignmentEnum["Bar"] = 'Bar'] = "Bar";
        AlignmentEnum[AlignmentEnum["List"] = 'List'] = "List";
        AlignmentEnum[AlignmentEnum["Clear"] = 'Clear'] = "Clear";
    })(AlignmentEnum = TabStopBase.AlignmentEnum || (TabStopBase.AlignmentEnum = {}));
    let LeaderEnum;
    (function (LeaderEnum) {
        LeaderEnum[LeaderEnum["None"] = 'None'] = "None";
        LeaderEnum[LeaderEnum["Dots"] = 'Dots'] = "Dots";
        LeaderEnum[LeaderEnum["Dashes"] = 'Dashes'] = "Dashes";
        LeaderEnum[LeaderEnum["Line"] = 'Line'] = "Line";
        LeaderEnum[LeaderEnum["Heavy"] = 'Heavy'] = "Heavy";
        LeaderEnum[LeaderEnum["MiddleDot"] = 'MiddleDot'] = "MiddleDot";
    })(LeaderEnum = TabStopBase.LeaderEnum || (TabStopBase.LeaderEnum = {}));
})(TabStopBase = exports.TabStopBase || (exports.TabStopBase = {}));
// tslint:enable:quotemark
