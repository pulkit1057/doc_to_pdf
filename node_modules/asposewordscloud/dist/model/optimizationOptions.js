"use strict";
/*
 * --------------------------------------------------------------------------------
 * <copyright company="Aspose" file="optimizationOptions.ts">
 *   Copyright (c) 2024 Aspose.Words for Cloud
 * </copyright>
 * <summary>
 *   Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 * </summary>
 * --------------------------------------------------------------------------------
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OptimizationOptions = exports.importsMapOptimizationOptions = void 0;
exports.importsMapOptimizationOptions = {};
/**
 * Container class for the document optimization options.
 */
class OptimizationOptions {
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return OptimizationOptions.attributeTypeMap;
    }
    constructor(init) {
        Object.assign(this, init);
    }
    collectFilesContent(_resultFilesContent) {
    }
    validate() {
        if (this.msWordVersion === null || this.msWordVersion === undefined) {
            throw new Error('Property MsWordVersion in OptimizationOptions is required.');
        }
    }
}
exports.OptimizationOptions = OptimizationOptions;
/**
 * Attribute type map
 */
OptimizationOptions.attributeTypeMap = [
    {
        name: "msWordVersion",
        baseName: "MsWordVersion",
        type: "OptimizationOptions.MsWordVersionEnum",
    }
];
/**
 * Enums for OptimizationOptions
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (OptimizationOptions) {
    let MsWordVersionEnum;
    (function (MsWordVersionEnum) {
        MsWordVersionEnum[MsWordVersionEnum["Word2000"] = 'Word2000'] = "Word2000";
        MsWordVersionEnum[MsWordVersionEnum["Word2002"] = 'Word2002'] = "Word2002";
        MsWordVersionEnum[MsWordVersionEnum["Word2003"] = 'Word2003'] = "Word2003";
        MsWordVersionEnum[MsWordVersionEnum["Word2007"] = 'Word2007'] = "Word2007";
        MsWordVersionEnum[MsWordVersionEnum["Word2010"] = 'Word2010'] = "Word2010";
        MsWordVersionEnum[MsWordVersionEnum["Word2013"] = 'Word2013'] = "Word2013";
        MsWordVersionEnum[MsWordVersionEnum["Word2016"] = 'Word2016'] = "Word2016";
        MsWordVersionEnum[MsWordVersionEnum["Word2019"] = 'Word2019'] = "Word2019";
    })(MsWordVersionEnum = OptimizationOptions.MsWordVersionEnum || (OptimizationOptions.MsWordVersionEnum = {}));
})(OptimizationOptions = exports.OptimizationOptions || (exports.OptimizationOptions = {}));
// tslint:enable:quotemark
