import { AttributeInfo } from '../internal/attributeInfo';
import { NodeLink } from './nodeLink';
export declare const importsMapFormField: {
    NodeLink: typeof NodeLink;
};
/**
 * FromField.
 */
export declare abstract class FormField extends NodeLink {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets the form field name.
     */
    name: string;
    /**
     * Gets or sets a value indicating whether a form field is enabled.
     * If a form field is enabled, its contents can be changed as the form is filled in.
     */
    enabled: boolean;
    /**
     * Gets or sets text, displayed in the status bar when a form field has the focus.
     * If the OwnStatus property is set to true, the StatusText property specifies the status bar text. If the OwnStatus property is set to false, the StatusText property specifies the name of an AutoText entry that contains status bar text for the form field.
     */
    statusText: string;
    /**
     * Gets or sets a value indicating whether the source of the text that's displayed in the status bar when a form field has the focus.
     * If true, the text specified by the StatusText property is displayed. If false, the text of the AutoText entry specified by the StatusText property is displayed.
     */
    ownStatus: boolean;
    /**
     * Gets or sets text, displayed in a message box when the form field has the focus and the user presses F1.
     * If the OwnHelp property is set to True, HelpText specifies the text string value. If OwnHelp is set to False, HelpText specifies the name of an AutoText entry that contains help text for the form field.
     */
    helpText: string;
    /**
     * Gets or sets a value indicating whether the source of the text that's displayed in a message box when a form field has the focus and the user presses F1.
     * If True, the text specified by the HelpText property is displayed. If False, the text in the AutoText entry specified by the HelpText property is displayed.
     */
    ownHelp: boolean;
    /**
     * Gets or sets a value indicating whether references to the specified form field are automatically updated whenever the field is exited.
     * Setting CalculateOnExit only affects the behavior of the form field when the document is opened in Microsoft Word. Aspose.Words never updates references to the form field.
     */
    calculateOnExit: boolean;
    /**
     * Gets or sets the entry macro name for the form field.
     * The entry macro runs when the form field gets the focus in Microsoft Word.
     */
    entryMacro: string;
    /**
     * Gets or sets the exit macro name for the form field.
     * The exit macro runs when the form field loses the focus in Microsoft Word.
     */
    exitMacro: string;
    constructor(init?: Partial<FormField>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
