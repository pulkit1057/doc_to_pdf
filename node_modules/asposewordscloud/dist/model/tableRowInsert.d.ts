import { AttributeInfo } from '../internal/attributeInfo';
import { ModelInterface } from './modelInterface';
import { Position } from './position';
export declare const importsMapTableRowInsert: {
    Position: typeof Position;
};
/**
 * DTO container with a table row element.
 */
export declare class TableRowInsert implements ModelInterface {
    /**
     * Attribute type map
     */
    static attributeTypeMap: Array<AttributeInfo>;
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap(): AttributeInfo[];
    /**
     * Gets or sets the count of columns. The default value is 1.
     */
    columnsCount: number;
    /**
     * Gets or sets the position of the table row that will be used to determine the placement of a new row.
     */
    existingRowPosition: Position;
    /**
     * Gets or sets table row will be inserted after row with specified 0-based index.
     */
    insertAfter: number;
    constructor(init?: Partial<TableRowInsert>);
    collectFilesContent(_resultFilesContent: Array<any>): void;
    validate(): void;
}
