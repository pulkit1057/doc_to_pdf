"use strict";
/*
 * --------------------------------------------------------------------------------
 * <copyright company="Aspose" file="tiffSaveOptionsData.ts">
 *   Copyright (c) 2024 Aspose.Words for Cloud
 * </copyright>
 * <summary>
 *   Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 * </summary>
 * --------------------------------------------------------------------------------
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TiffSaveOptionsData = exports.importsMapTiffSaveOptionsData = void 0;
const imageSaveOptionsData_1 = require("./imageSaveOptionsData");
exports.importsMapTiffSaveOptionsData = {
    ImageSaveOptionsData: imageSaveOptionsData_1.ImageSaveOptionsData,
};
/**
 * Container class for tiff save options.
 */
class TiffSaveOptionsData extends imageSaveOptionsData_1.ImageSaveOptionsData {
    /**
     * Returns attribute type map
     */
    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(TiffSaveOptionsData.attributeTypeMap);
    }
    constructor(init) {
        super(init);
        this.saveFormat = 'tiff';
        Object.assign(this, init);
    }
    collectFilesContent(_resultFilesContent) {
    }
    validate() {
        super.validate();
    }
}
exports.TiffSaveOptionsData = TiffSaveOptionsData;
/**
 * Attribute type map
 */
TiffSaveOptionsData.attributeTypeMap = [
    {
        name: "thresholdForFloydSteinbergDithering",
        baseName: "ThresholdForFloydSteinbergDithering",
        type: "number",
    },
    {
        name: "tiffBinarizationMethod",
        baseName: "TiffBinarizationMethod",
        type: "TiffSaveOptionsData.TiffBinarizationMethodEnum",
    },
    {
        name: "tiffCompression",
        baseName: "TiffCompression",
        type: "TiffSaveOptionsData.TiffCompressionEnum",
    }
];
/**
 * Enums for TiffSaveOptionsData
 */
// tslint:disable:quotemark
// tslint:disable-next-line:no-namespace
(function (TiffSaveOptionsData) {
    let TiffBinarizationMethodEnum;
    (function (TiffBinarizationMethodEnum) {
        TiffBinarizationMethodEnum[TiffBinarizationMethodEnum["Threshold"] = 'Threshold'] = "Threshold";
        TiffBinarizationMethodEnum[TiffBinarizationMethodEnum["FloydSteinbergDithering"] = 'FloydSteinbergDithering'] = "FloydSteinbergDithering";
    })(TiffBinarizationMethodEnum = TiffSaveOptionsData.TiffBinarizationMethodEnum || (TiffSaveOptionsData.TiffBinarizationMethodEnum = {}));
    let TiffCompressionEnum;
    (function (TiffCompressionEnum) {
        TiffCompressionEnum[TiffCompressionEnum["None"] = 'None'] = "None";
        TiffCompressionEnum[TiffCompressionEnum["Rle"] = 'Rle'] = "Rle";
        TiffCompressionEnum[TiffCompressionEnum["Lzw"] = 'Lzw'] = "Lzw";
        TiffCompressionEnum[TiffCompressionEnum["Ccitt3"] = 'Ccitt3'] = "Ccitt3";
        TiffCompressionEnum[TiffCompressionEnum["Ccitt4"] = 'Ccitt4'] = "Ccitt4";
    })(TiffCompressionEnum = TiffSaveOptionsData.TiffCompressionEnum || (TiffSaveOptionsData.TiffCompressionEnum = {}));
})(TiffSaveOptionsData = exports.TiffSaveOptionsData || (exports.TiffSaveOptionsData = {}));
// tslint:enable:quotemark
